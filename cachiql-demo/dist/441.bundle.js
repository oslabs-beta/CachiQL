"use strict";(self.webpackChunkcachiql_demo=self.webpackChunkcachiql_demo||[]).push([[441],{50045:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "C": () => (/* binding */ CharacterStream),\n/* harmony export */   "P": () => (/* binding */ Position),\n/* harmony export */   "R": () => (/* binding */ Range)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nclass CharacterStream {\n  constructor(sourceText) {\n    this.getStartOfToken = () => this._start;\n    this.getCurrentPosition = () => this._pos;\n    this.eol = () => this._sourceText.length === this._pos;\n    this.sol = () => this._pos === 0;\n    this.peek = () => {\n      return this._sourceText.charAt(this._pos) ? this._sourceText.charAt(this._pos) : null;\n    };\n    this.next = () => {\n      const char = this._sourceText.charAt(this._pos);\n      this._pos++;\n      return char;\n    };\n    this.eat = (pattern) => {\n      const isMatched = this._testNextCharacter(pattern);\n      if (isMatched) {\n        this._start = this._pos;\n        this._pos++;\n        return this._sourceText.charAt(this._pos - 1);\n      }\n      return void 0;\n    };\n    this.eatWhile = (match) => {\n      let isMatched = this._testNextCharacter(match);\n      let didEat = false;\n      if (isMatched) {\n        didEat = isMatched;\n        this._start = this._pos;\n      }\n      while (isMatched) {\n        this._pos++;\n        isMatched = this._testNextCharacter(match);\n        didEat = true;\n      }\n      return didEat;\n    };\n    this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n    this.skipToEnd = () => {\n      this._pos = this._sourceText.length;\n    };\n    this.skipTo = (position) => {\n      this._pos = position;\n    };\n    this.match = (pattern, consume = true, caseFold = false) => {\n      let token = null;\n      let match = null;\n      if (typeof pattern === "string") {\n        const regex = new RegExp(pattern, caseFold ? "i" : "g");\n        match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n        token = pattern;\n      } else if (pattern instanceof RegExp) {\n        match = this._sourceText.slice(this._pos).match(pattern);\n        token = match === null || match === void 0 ? void 0 : match[0];\n      }\n      if (match != null) {\n        if (typeof pattern === "string" || match instanceof Array && this._sourceText.startsWith(match[0], this._pos)) {\n          if (consume) {\n            this._start = this._pos;\n            if (token && token.length) {\n              this._pos += token.length;\n            }\n          }\n          return match;\n        }\n      }\n      return false;\n    };\n    this.backUp = (num) => {\n      this._pos -= num;\n    };\n    this.column = () => this._pos;\n    this.indentation = () => {\n      const match = this._sourceText.match(/\\s*/);\n      let indent = 0;\n      if (match && match.length !== 0) {\n        const whiteSpaces = match[0];\n        let pos = 0;\n        while (whiteSpaces.length > pos) {\n          if (whiteSpaces.charCodeAt(pos) === 9) {\n            indent += 2;\n          } else {\n            indent++;\n          }\n          pos++;\n        }\n      }\n      return indent;\n    };\n    this.current = () => this._sourceText.slice(this._start, this._pos);\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n  _testNextCharacter(pattern) {\n    const character = this._sourceText.charAt(this._pos);\n    let isMatched = false;\n    if (typeof pattern === "string") {\n      isMatched = character === pattern;\n    } else {\n      isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);\n    }\n    return isMatched;\n  }\n}\n__name(CharacterStream, "CharacterStream");\nclass Range {\n  constructor(start, end) {\n    this.containsPosition = (position) => {\n      if (this.start.line === position.line) {\n        return this.start.character <= position.character;\n      } else if (this.end.line === position.line) {\n        return this.end.character >= position.character;\n      } else {\n        return this.start.line <= position.line && this.end.line >= position.line;\n      }\n    };\n    this.start = start;\n    this.end = end;\n  }\n  setStart(line, character) {\n    this.start = new Position(line, character);\n  }\n  setEnd(line, character) {\n    this.end = new Position(line, character);\n  }\n}\n__name(Range, "Range");\nclass Position {\n  constructor(line, character) {\n    this.lessThanOrEqualTo = (position) => this.line < position.line || this.line === position.line && this.character <= position.character;\n    this.line = line;\n    this.character = character;\n  }\n  setLine(line) {\n    this.line = line;\n  }\n  setCharacter(character) {\n    this.character = character;\n  }\n}\n__name(Position, "Position");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAwNDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLDREQUE0RCwyQkFBMkI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FjaGlxbC1kZW1vLy4vbm9kZV9tb2R1bGVzL0BncmFwaGlxbC9yZWFjdC9kaXN0L1JhbmdlLmVzLmpzPzA4MTMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX25hbWUgPSAodGFyZ2V0LCB2YWx1ZSkgPT4gX19kZWZQcm9wKHRhcmdldCwgXCJuYW1lXCIsIHsgdmFsdWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbmNsYXNzIENoYXJhY3RlclN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKHNvdXJjZVRleHQpIHtcbiAgICB0aGlzLmdldFN0YXJ0T2ZUb2tlbiA9ICgpID0+IHRoaXMuX3N0YXJ0O1xuICAgIHRoaXMuZ2V0Q3VycmVudFBvc2l0aW9uID0gKCkgPT4gdGhpcy5fcG9zO1xuICAgIHRoaXMuZW9sID0gKCkgPT4gdGhpcy5fc291cmNlVGV4dC5sZW5ndGggPT09IHRoaXMuX3BvcztcbiAgICB0aGlzLnNvbCA9ICgpID0+IHRoaXMuX3BvcyA9PT0gMDtcbiAgICB0aGlzLnBlZWsgPSAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fc291cmNlVGV4dC5jaGFyQXQodGhpcy5fcG9zKSA/IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3BvcykgOiBudWxsO1xuICAgIH07XG4gICAgdGhpcy5uZXh0ID0gKCkgPT4ge1xuICAgICAgY29uc3QgY2hhciA9IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3Bvcyk7XG4gICAgICB0aGlzLl9wb3MrKztcbiAgICAgIHJldHVybiBjaGFyO1xuICAgIH07XG4gICAgdGhpcy5lYXQgPSAocGF0dGVybikgPT4ge1xuICAgICAgY29uc3QgaXNNYXRjaGVkID0gdGhpcy5fdGVzdE5leHRDaGFyYWN0ZXIocGF0dGVybik7XG4gICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgIHRoaXMuX3N0YXJ0ID0gdGhpcy5fcG9zO1xuICAgICAgICB0aGlzLl9wb3MrKztcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3BvcyAtIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9O1xuICAgIHRoaXMuZWF0V2hpbGUgPSAobWF0Y2gpID0+IHtcbiAgICAgIGxldCBpc01hdGNoZWQgPSB0aGlzLl90ZXN0TmV4dENoYXJhY3RlcihtYXRjaCk7XG4gICAgICBsZXQgZGlkRWF0ID0gZmFsc2U7XG4gICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgIGRpZEVhdCA9IGlzTWF0Y2hlZDtcbiAgICAgICAgdGhpcy5fc3RhcnQgPSB0aGlzLl9wb3M7XG4gICAgICB9XG4gICAgICB3aGlsZSAoaXNNYXRjaGVkKSB7XG4gICAgICAgIHRoaXMuX3BvcysrO1xuICAgICAgICBpc01hdGNoZWQgPSB0aGlzLl90ZXN0TmV4dENoYXJhY3RlcihtYXRjaCk7XG4gICAgICAgIGRpZEVhdCA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGlkRWF0O1xuICAgIH07XG4gICAgdGhpcy5lYXRTcGFjZSA9ICgpID0+IHRoaXMuZWF0V2hpbGUoL1tcXHNcXHUwMGEwXS8pO1xuICAgIHRoaXMuc2tpcFRvRW5kID0gKCkgPT4ge1xuICAgICAgdGhpcy5fcG9zID0gdGhpcy5fc291cmNlVGV4dC5sZW5ndGg7XG4gICAgfTtcbiAgICB0aGlzLnNraXBUbyA9IChwb3NpdGlvbikgPT4ge1xuICAgICAgdGhpcy5fcG9zID0gcG9zaXRpb247XG4gICAgfTtcbiAgICB0aGlzLm1hdGNoID0gKHBhdHRlcm4sIGNvbnN1bWUgPSB0cnVlLCBjYXNlRm9sZCA9IGZhbHNlKSA9PiB7XG4gICAgICBsZXQgdG9rZW4gPSBudWxsO1xuICAgICAgbGV0IG1hdGNoID0gbnVsbDtcbiAgICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAocGF0dGVybiwgY2FzZUZvbGQgPyBcImlcIiA6IFwiZ1wiKTtcbiAgICAgICAgbWF0Y2ggPSByZWdleC50ZXN0KHRoaXMuX3NvdXJjZVRleHQuc3Vic3RyKHRoaXMuX3BvcywgcGF0dGVybi5sZW5ndGgpKTtcbiAgICAgICAgdG9rZW4gPSBwYXR0ZXJuO1xuICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIG1hdGNoID0gdGhpcy5fc291cmNlVGV4dC5zbGljZSh0aGlzLl9wb3MpLm1hdGNoKHBhdHRlcm4pO1xuICAgICAgICB0b2tlbiA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaFswXTtcbiAgICAgIH1cbiAgICAgIGlmIChtYXRjaCAhPSBudWxsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIiB8fCBtYXRjaCBpbnN0YW5jZW9mIEFycmF5ICYmIHRoaXMuX3NvdXJjZVRleHQuc3RhcnRzV2l0aChtYXRjaFswXSwgdGhpcy5fcG9zKSkge1xuICAgICAgICAgIGlmIChjb25zdW1lKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGFydCA9IHRoaXMuX3BvcztcbiAgICAgICAgICAgIGlmICh0b2tlbiAmJiB0b2tlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgdGhpcy5fcG9zICs9IHRva2VuLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICB0aGlzLmJhY2tVcCA9IChudW0pID0+IHtcbiAgICAgIHRoaXMuX3BvcyAtPSBudW07XG4gICAgfTtcbiAgICB0aGlzLmNvbHVtbiA9ICgpID0+IHRoaXMuX3BvcztcbiAgICB0aGlzLmluZGVudGF0aW9uID0gKCkgPT4ge1xuICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLl9zb3VyY2VUZXh0Lm1hdGNoKC9cXHMqLyk7XG4gICAgICBsZXQgaW5kZW50ID0gMDtcbiAgICAgIGlmIChtYXRjaCAmJiBtYXRjaC5sZW5ndGggIT09IDApIHtcbiAgICAgICAgY29uc3Qgd2hpdGVTcGFjZXMgPSBtYXRjaFswXTtcbiAgICAgICAgbGV0IHBvcyA9IDA7XG4gICAgICAgIHdoaWxlICh3aGl0ZVNwYWNlcy5sZW5ndGggPiBwb3MpIHtcbiAgICAgICAgICBpZiAod2hpdGVTcGFjZXMuY2hhckNvZGVBdChwb3MpID09PSA5KSB7XG4gICAgICAgICAgICBpbmRlbnQgKz0gMjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5kZW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvcysrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaW5kZW50O1xuICAgIH07XG4gICAgdGhpcy5jdXJyZW50ID0gKCkgPT4gdGhpcy5fc291cmNlVGV4dC5zbGljZSh0aGlzLl9zdGFydCwgdGhpcy5fcG9zKTtcbiAgICB0aGlzLl9zdGFydCA9IDA7XG4gICAgdGhpcy5fcG9zID0gMDtcbiAgICB0aGlzLl9zb3VyY2VUZXh0ID0gc291cmNlVGV4dDtcbiAgfVxuICBfdGVzdE5leHRDaGFyYWN0ZXIocGF0dGVybikge1xuICAgIGNvbnN0IGNoYXJhY3RlciA9IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3Bvcyk7XG4gICAgbGV0IGlzTWF0Y2hlZCA9IGZhbHNlO1xuICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgaXNNYXRjaGVkID0gY2hhcmFjdGVyID09PSBwYXR0ZXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBpc01hdGNoZWQgPSBwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwID8gcGF0dGVybi50ZXN0KGNoYXJhY3RlcikgOiBwYXR0ZXJuKGNoYXJhY3Rlcik7XG4gICAgfVxuICAgIHJldHVybiBpc01hdGNoZWQ7XG4gIH1cbn1cbl9fbmFtZShDaGFyYWN0ZXJTdHJlYW0sIFwiQ2hhcmFjdGVyU3RyZWFtXCIpO1xuY2xhc3MgUmFuZ2Uge1xuICBjb25zdHJ1Y3RvcihzdGFydCwgZW5kKSB7XG4gICAgdGhpcy5jb250YWluc1Bvc2l0aW9uID0gKHBvc2l0aW9uKSA9PiB7XG4gICAgICBpZiAodGhpcy5zdGFydC5saW5lID09PSBwb3NpdGlvbi5saW5lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXJ0LmNoYXJhY3RlciA8PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZW5kLmxpbmUgPT09IHBvc2l0aW9uLmxpbmUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5kLmNoYXJhY3RlciA+PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGFydC5saW5lIDw9IHBvc2l0aW9uLmxpbmUgJiYgdGhpcy5lbmQubGluZSA+PSBwb3NpdGlvbi5saW5lO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5zdGFydCA9IHN0YXJ0O1xuICAgIHRoaXMuZW5kID0gZW5kO1xuICB9XG4gIHNldFN0YXJ0KGxpbmUsIGNoYXJhY3Rlcikge1xuICAgIHRoaXMuc3RhcnQgPSBuZXcgUG9zaXRpb24obGluZSwgY2hhcmFjdGVyKTtcbiAgfVxuICBzZXRFbmQobGluZSwgY2hhcmFjdGVyKSB7XG4gICAgdGhpcy5lbmQgPSBuZXcgUG9zaXRpb24obGluZSwgY2hhcmFjdGVyKTtcbiAgfVxufVxuX19uYW1lKFJhbmdlLCBcIlJhbmdlXCIpO1xuY2xhc3MgUG9zaXRpb24ge1xuICBjb25zdHJ1Y3RvcihsaW5lLCBjaGFyYWN0ZXIpIHtcbiAgICB0aGlzLmxlc3NUaGFuT3JFcXVhbFRvID0gKHBvc2l0aW9uKSA9PiB0aGlzLmxpbmUgPCBwb3NpdGlvbi5saW5lIHx8IHRoaXMubGluZSA9PT0gcG9zaXRpb24ubGluZSAmJiB0aGlzLmNoYXJhY3RlciA8PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgdGhpcy5saW5lID0gbGluZTtcbiAgICB0aGlzLmNoYXJhY3RlciA9IGNoYXJhY3RlcjtcbiAgfVxuICBzZXRMaW5lKGxpbmUpIHtcbiAgICB0aGlzLmxpbmUgPSBsaW5lO1xuICB9XG4gIHNldENoYXJhY3RlcihjaGFyYWN0ZXIpIHtcbiAgICB0aGlzLmNoYXJhY3RlciA9IGNoYXJhY3RlcjtcbiAgfVxufVxuX19uYW1lKFBvc2l0aW9uLCBcIlBvc2l0aW9uXCIpO1xuZXhwb3J0IHsgQ2hhcmFjdGVyU3RyZWFtIGFzIEMsIFBvc2l0aW9uIGFzIFAsIFJhbmdlIGFzIFIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50045\n')},71441:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97480);\n/* harmony import */ var _show_hint_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26079);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(90398);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(77304);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(84275);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(52433);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(45397);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(90316);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97359);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99878);\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59361);\n/* harmony import */ var _Range_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50045);\n/* harmony import */ var _onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98007);\n/* harmony import */ var _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(92584);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(67294);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(73935);\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\n\n\n\n\n\n\n\n\n\nfunction getDefinitionState(tokenState) {\n  let definitionState;\n  forEachState(tokenState, (state) => {\n    switch (state.kind) {\n      case "Query":\n      case "ShortQuery":\n      case "Mutation":\n      case "Subscription":\n      case "FragmentDefinition":\n        definitionState = state;\n        break;\n    }\n  });\n  return definitionState;\n}\n__name(getDefinitionState, "getDefinitionState");\nfunction getFieldDef(schema, type, fieldName) {\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S.name && schema.getQueryType() === type) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S;\n  }\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T.name && schema.getQueryType() === type) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T;\n  }\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a.name && (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(type)) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a;\n  }\n  if ("getFields" in type) {\n    return type.getFields()[fieldName];\n  }\n  return null;\n}\n__name(getFieldDef, "getFieldDef");\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n  while (state === null || state === void 0 ? void 0 : state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n__name(forEachState, "forEachState");\nfunction objectValues(object) {\n  const keys = Object.keys(object);\n  const len = keys.length;\n  const values = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    values[i] = object[keys[i]];\n  }\n  return values;\n}\n__name(objectValues, "objectValues");\nfunction hintList(token, list) {\n  return filterAndSortList(list, normalizeText(token.string));\n}\n__name(hintList, "hintList");\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, (entry) => !entry.isDeprecated);\n  }\n  const byProximity = list.map((entry) => ({\n    proximity: getProximity(normalizeText(entry.label), text),\n    entry\n  }));\n  return filterNonEmpty(filterNonEmpty(byProximity, (pair) => pair.proximity <= 2), (pair) => !pair.entry.isDeprecated).sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.label.length - b.entry.label.length).map((pair) => pair.entry);\n}\n__name(filterAndSortList, "filterAndSortList");\nfunction filterNonEmpty(array, predicate) {\n  const filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n__name(filterNonEmpty, "filterNonEmpty");\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, "");\n}\n__name(normalizeText, "normalizeText");\nfunction getProximity(suggestion, text) {\n  let proximity = lexicalDistance(text, suggestion);\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n  return proximity;\n}\n__name(getProximity, "getProximity");\nfunction lexicalDistance(a, b) {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n  return d[aLength][bLength];\n}\n__name(lexicalDistance, "lexicalDistance");\nconst SuggestionCommand = {\n  command: "editor.action.triggerSuggest",\n  title: "Suggestions"\n};\nconst collectFragmentDefs = /* @__PURE__ */ __name((op) => {\n  const externalFragments = [];\n  if (op) {\n    try {\n      (0,graphql__WEBPACK_IMPORTED_MODULE_9__/* .visit */ .Vn)((0,graphql__WEBPACK_IMPORTED_MODULE_10__/* .parse */ .Qc)(op), {\n        FragmentDefinition(def) {\n          externalFragments.push(def);\n        }\n      });\n    } catch (_a) {\n      return [];\n    }\n  }\n  return externalFragments;\n}, "collectFragmentDefs");\nfunction getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {\n  var _a;\n  const opts = Object.assign(Object.assign({}, options), { schema });\n  const token = contextToken || getTokenAtPosition(queryText, cursor);\n  const state = token.state.kind === "Invalid" ? token.state.prevState : token.state;\n  if (!state) {\n    return [];\n  }\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = getTypeInfo(schema, token.state);\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DOCUMENT) {\n    return hintList(token, [\n      { label: "query", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: "mutation", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: "subscription", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: "fragment", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: "{", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Constructor }\n    ]);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {\n    return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD) {\n    return getSuggestionsForFieldNames(token, typeInfo, opts);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 0) {\n    const argDefs = typeInfo.argDefs;\n    if (argDefs) {\n      return hintList(token, argDefs.map((argDef) => {\n        var _a2;\n        return {\n          label: argDef.name,\n          insertText: argDef.name + ": ",\n          command: SuggestionCommand,\n          detail: String(argDef.type),\n          documentation: (_a2 = argDef.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n          type: argDef.type\n        };\n      }));\n    }\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 0) {\n    if (typeInfo.objectFieldDefs) {\n      const objectFields = objectValues(typeInfo.objectFieldDefs);\n      const completionKind = kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE ? _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Value : _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field;\n      return hintList(token, objectFields.map((field) => {\n        var _a2;\n        return {\n          label: field.name,\n          detail: String(field.type),\n          documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n          kind: completionKind,\n          type: field.type\n        };\n      }));\n    }\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 2) {\n    return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && step === 1) {\n    const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(typeInfo.inputType);\n    const variableDefinitions = getVariableCompletions(queryText, schema, token);\n    return hintList(token, variableDefinitions.filter((v) => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState != null && state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION) {\n    return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD && step === 1) {\n    return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs) ? fragmentDefs : collectFragmentDefs(fragmentDefs));\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState && (state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NON_NULL_TYPE)) {\n    return getSuggestionsForVariableDefinition(token, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE) {\n    return getSuggestionsForDirective(token, state, schema);\n  }\n  return [];\n}\n__name(getAutocompleteSuggestions, "getAutocompleteSuggestions");\nconst insertSuffix = ` {\n  $1\n}`;\nconst getInsertText = /* @__PURE__ */ __name((field) => {\n  const type = field.type;\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(type)) {\n    return insertSuffix;\n  }\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isListType */ .HG)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(type.ofType)) {\n    return insertSuffix;\n  }\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isNonNullType */ .zM)(type)) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(type.ofType)) {\n      return insertSuffix;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isListType */ .HG)(type.ofType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(type.ofType.ofType)) {\n      return insertSuffix;\n    }\n  }\n  return null;\n}, "getInsertText");\nfunction getSuggestionsForFieldNames(token, typeInfo, options) {\n  var _a;\n  if (typeInfo.parentType) {\n    const parentType = typeInfo.parentType;\n    let fields = [];\n    if ("getFields" in parentType) {\n      fields = objectValues(parentType.getFields());\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(parentType)) {\n      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__/* .TypeNameMetaFieldDef */ .hU);\n    }\n    if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {\n      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__/* .SchemaMetaFieldDef */ .Az, graphql__WEBPACK_IMPORTED_MODULE_11__/* .TypeMetaFieldDef */ .tF);\n    }\n    return hintList(token, fields.map((field, index) => {\n      var _a2;\n      const suggestion = {\n        sortText: String(index) + field.name,\n        label: field.name,\n        detail: String(field.type),\n        documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n        deprecated: Boolean(field.deprecationReason),\n        isDeprecated: Boolean(field.deprecationReason),\n        deprecationReason: field.deprecationReason,\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,\n        type: field.type\n      };\n      const insertText = getInsertText(field);\n      if (insertText) {\n        suggestion.insertText = field.name + insertText;\n        suggestion.insertTextFormat = _index_es_js__WEBPACK_IMPORTED_MODULE_2__.I.Snippet;\n        suggestion.command = SuggestionCommand;\n      }\n      return suggestion;\n    }));\n  }\n  return [];\n}\n__name(getSuggestionsForFieldNames, "getSuggestionsForFieldNames");\nfunction getSuggestionsForInputValues(token, typeInfo, queryText, schema) {\n  const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(typeInfo.inputType);\n  const queryVariables = getVariableCompletions(queryText, schema, token).filter((v) => v.detail === namedInputType.name);\n  if (namedInputType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLEnumType */ .mR) {\n    const values = namedInputType.getValues();\n    return hintList(token, values.map((value) => {\n      var _a;\n      return {\n        label: value.name,\n        detail: String(namedInputType),\n        documentation: (_a = value.description) !== null && _a !== void 0 ? _a : void 0,\n        deprecated: Boolean(value.deprecationReason),\n        isDeprecated: Boolean(value.deprecationReason),\n        deprecationReason: value.deprecationReason,\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.EnumMember,\n        type: namedInputType\n      };\n    }).concat(queryVariables));\n  } else if (namedInputType === graphql__WEBPACK_IMPORTED_MODULE_12__/* .GraphQLBoolean */ .EZ) {\n    return hintList(token, queryVariables.concat([\n      {\n        label: "true",\n        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__/* .GraphQLBoolean */ .EZ),\n        documentation: "Not false.",\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n        type: graphql__WEBPACK_IMPORTED_MODULE_12__/* .GraphQLBoolean */ .EZ\n      },\n      {\n        label: "false",\n        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__/* .GraphQLBoolean */ .EZ),\n        documentation: "Not true.",\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n        type: graphql__WEBPACK_IMPORTED_MODULE_12__/* .GraphQLBoolean */ .EZ\n      }\n    ]));\n  }\n  return queryVariables;\n}\n__name(getSuggestionsForInputValues, "getSuggestionsForInputValues");\nfunction getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {\n  if (tokenState.needsSeparator) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n  const schemaInterfaces = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__/* .isInterfaceType */ .oT);\n  const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n  const inlineInterfaces = /* @__PURE__ */ new Set();\n  runOnlineParser(documentText, (_, state) => {\n    var _a, _b, _c, _d, _e;\n    if (state.name) {\n      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF && !schemaInterfaceNames.includes(state.name)) {\n        inlineInterfaces.add(state.name);\n      }\n      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {\n        if (typeInfo.interfaceDef) {\n          const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();\n          typeInfo.interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLInterfaceType */ .oW(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [\n            ...interfaceConfig.interfaces,\n            type || new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLInterfaceType */ .oW({ name: state.name, fields: {} })\n          ] }));\n        } else if (typeInfo.objectTypeDef) {\n          const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();\n          typeInfo.objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLObjectType */ .h6(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [\n            ...objectTypeConfig.interfaces,\n            type || new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLInterfaceType */ .oW({ name: state.name, fields: {} })\n          ] }));\n        }\n      }\n    }\n  });\n  const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n  const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];\n  const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n  const possibleInterfaces = schemaInterfaces.concat([...inlineInterfaces].map((name) => ({ name }))).filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) && !siblingInterfaceNames.includes(name));\n  return hintList(token, possibleInterfaces.map((type) => {\n    const result = {\n      label: type.name,\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Interface,\n      type\n    };\n    if (type === null || type === void 0 ? void 0 : type.description) {\n      result.documentation = type.description;\n    }\n    return result;\n  }));\n}\n__name(getSuggestionsForImplements, "getSuggestionsForImplements");\nfunction getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {\n  let possibleTypes;\n  if (typeInfo.parentType) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isAbstractType */ .m0)(typeInfo.parentType)) {\n      const abstractType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .assertAbstractType */ .fU)(typeInfo.parentType);\n      const possibleObjTypes = schema.getPossibleTypes(abstractType);\n      const possibleIfaceMap = /* @__PURE__ */ Object.create(null);\n      possibleObjTypes.forEach((type) => {\n        type.getInterfaces().forEach((iface) => {\n          possibleIfaceMap[iface.name] = iface;\n        });\n      });\n      possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n    } else {\n      possibleTypes = [typeInfo.parentType];\n    }\n  } else {\n    const typeMap = schema.getTypeMap();\n    possibleTypes = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv);\n  }\n  return hintList(token, possibleTypes.map((type) => {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(type);\n    return {\n      label: String(type),\n      documentation: (namedType === null || namedType === void 0 ? void 0 : namedType.description) || "",\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field\n    };\n  }));\n}\n__name(getSuggestionsForFragmentTypeConditions, "getSuggestionsForFragmentTypeConditions");\nfunction getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {\n  if (!queryText) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n  const defState = getDefinitionState(token.state);\n  const fragments = getFragmentDefinitions(queryText);\n  if (fragmentDefs && fragmentDefs.length > 0) {\n    fragments.push(...fragmentDefs);\n  }\n  const relevantFrags = fragments.filter((frag) => typeMap[frag.typeCondition.name.value] && !(defState && defState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && defState.name === frag.name.value) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(typeInfo.parentType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .isCompositeType */ .Gv)(typeMap[frag.typeCondition.name.value]) && (0,graphql__WEBPACK_IMPORTED_MODULE_13__/* .doTypesOverlap */ .zR)(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));\n  return hintList(token, relevantFrags.map((frag) => ({\n    label: frag.name.value,\n    detail: String(typeMap[frag.typeCondition.name.value]),\n    documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,\n    type: typeMap[frag.typeCondition.name.value]\n  })));\n}\n__name(getSuggestionsForFragmentSpread, "getSuggestionsForFragmentSpread");\nconst getParentDefinition = /* @__PURE__ */ __name((state, kind) => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {\n    return state.prevState;\n  }\n  if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {\n    return state.prevState.prevState;\n  }\n  if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {\n    return state.prevState.prevState.prevState;\n  }\n  if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {\n    return state.prevState.prevState.prevState.prevState;\n  }\n}, "getParentDefinition");\nfunction getVariableCompletions(queryText, schema, token) {\n  let variableName = null;\n  let variableType;\n  const definitions = /* @__PURE__ */ Object.create({});\n  runOnlineParser(queryText, (_, state) => {\n    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && state.name) {\n      variableName = state.name;\n    }\n    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && variableName) {\n      const parentDefinition = getParentDefinition(state, _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE);\n      if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {\n        variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);\n      }\n    }\n    if (variableName && variableType) {\n      if (!definitions[variableName]) {\n        definitions[variableName] = {\n          detail: variableType.toString(),\n          insertText: token.string === "$" ? variableName : "$" + variableName,\n          label: variableName,\n          type: variableType,\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable\n        };\n        variableName = null;\n        variableType = null;\n      }\n    }\n  });\n  return objectValues(definitions);\n}\n__name(getVariableCompletions, "getVariableCompletions");\nfunction getFragmentDefinitions(queryText) {\n  const fragmentDefs = [];\n  runOnlineParser(queryText, (_, state) => {\n    if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && state.name && state.type) {\n      fragmentDefs.push({\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION,\n        name: {\n          kind: graphql__WEBPACK_IMPORTED_MODULE_14__/* .Kind.NAME */ .h.NAME,\n          value: state.name\n        },\n        selectionSet: {\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET,\n          selections: []\n        },\n        typeCondition: {\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE,\n          name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_14__/* .Kind.NAME */ .h.NAME,\n            value: state.type\n          }\n        }\n      });\n    }\n  });\n  return fragmentDefs;\n}\n__name(getFragmentDefinitions, "getFragmentDefinitions");\nfunction getSuggestionsForVariableDefinition(token, schema, _kind) {\n  const inputTypeMap = schema.getTypeMap();\n  const inputTypes = objectValues(inputTypeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__/* .isInputType */ .j$);\n  return hintList(token, inputTypes.map((type) => ({\n    label: type.name,\n    documentation: type.description,\n    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable\n  })));\n}\n__name(getSuggestionsForVariableDefinition, "getSuggestionsForVariableDefinition");\nfunction getSuggestionsForDirective(token, state, schema, _kind) {\n  var _a;\n  if ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) {\n    const directives = schema.getDirectives().filter((directive) => canUseDirective(state.prevState, directive));\n    return hintList(token, directives.map((directive) => ({\n      label: directive.name,\n      documentation: directive.description || "",\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function\n    })));\n  }\n  return [];\n}\n__name(getSuggestionsForDirective, "getSuggestionsForDirective");\nfunction getTokenAtPosition(queryText, cursor) {\n  let styleAtCursor = null;\n  let stateAtCursor = null;\n  let stringAtCursor = null;\n  const token = runOnlineParser(queryText, (stream, state, style, index) => {\n    if (index === cursor.line) {\n      if (stream.getCurrentPosition() >= cursor.character) {\n        styleAtCursor = style;\n        stateAtCursor = Object.assign({}, state);\n        stringAtCursor = stream.current();\n        return "BREAK";\n      }\n    }\n  });\n  return {\n    start: token.start,\n    end: token.end,\n    string: stringAtCursor || token.string,\n    state: stateAtCursor || token.state,\n    style: styleAtCursor || token.style\n  };\n}\n__name(getTokenAtPosition, "getTokenAtPosition");\nfunction runOnlineParser(queryText, callback) {\n  const lines = queryText.split("\\n");\n  const parser = (0,_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__.o)();\n  let state = parser.startState();\n  let style = "";\n  let stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C("");\n  for (let i = 0; i < lines.length; i++) {\n    stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C(lines[i]);\n    while (!stream.eol()) {\n      style = parser.token(stream, state);\n      const code = callback(stream, state, style, i);\n      if (code === "BREAK") {\n        break;\n      }\n    }\n    callback(stream, state, style, i);\n    if (!state.kind) {\n      state = parser.startState();\n    }\n  }\n  return {\n    start: stream.getStartOfToken(),\n    end: stream.getCurrentPosition(),\n    string: stream.current(),\n    state,\n    style\n  };\n}\n__name(runOnlineParser, "runOnlineParser");\nfunction canUseDirective(state, directive) {\n  var _a;\n  if (!state || !state.kind) {\n    return false;\n  }\n  const kind = state.kind;\n  const locations = directive.locations;\n  switch (kind) {\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.QUERY */ .B.QUERY) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.MUTATION */ .B.MUTATION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.SUBSCRIPTION */ .B.SUBSCRIPTION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.FIELD */ .B.FIELD) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.FRAGMENT_DEFINITION */ .B.FRAGMENT_DEFINITION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.FRAGMENT_SPREAD */ .B.FRAGMENT_SPREAD) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.INLINE_FRAGMENT */ .B.INLINE_FRAGMENT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCHEMA_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.SCHEMA */ .B.SCHEMA) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCALAR_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.SCALAR */ .B.SCALAR) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.OBJECT */ .B.OBJECT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.FIELD_DEFINITION */ .B.FIELD_DEFINITION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.INTERFACE */ .B.INTERFACE) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.UNION_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.UNION */ .B.UNION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.ENUM */ .B.ENUM) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.ENUM_VALUE */ .B.ENUM_VALUE) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.INPUT_OBJECT */ .B.INPUT_OBJECT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_VALUE_DEF:\n      const prevStateKind = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind;\n      switch (prevStateKind) {\n        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS_DEF:\n          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.ARGUMENT_DEFINITION */ .B.ARGUMENT_DEFINITION) !== -1;\n        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:\n          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__/* .DirectiveLocation.INPUT_FIELD_DEFINITION */ .B.INPUT_FIELD_DEFINITION) !== -1;\n      }\n  }\n  return false;\n}\n__name(canUseDirective, "canUseDirective");\nfunction getTypeInfo(schema, tokenState) {\n  let argDef;\n  let argDefs;\n  let directiveDef;\n  let enumValue;\n  let fieldDef;\n  let inputType;\n  let objectTypeDef;\n  let objectFieldDefs;\n  let parentType;\n  let type;\n  let interfaceDef;\n  forEachState(tokenState, (state) => {\n    var _a;\n    switch (state.kind) {\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:\n      case "ShortQuery":\n        type = schema.getQueryType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:\n        type = schema.getMutationType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:\n        type = schema.getSubscriptionType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:\n        if (state.type) {\n          type = schema.getType(state.type);\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {\n        if (!type || !state.name) {\n          fieldDef = null;\n        } else {\n          fieldDef = parentType ? getFieldDef(schema, parentType, state.name) : null;\n          type = fieldDef ? fieldDef.type : null;\n        }\n        break;\n      }\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET:\n        parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(type);\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:\n        directiveDef = state.name ? schema.getDirective(state.name) : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:\n        if (state.name) {\n          objectTypeDef = null;\n          interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLInterfaceType */ .oW({\n            name: state.name,\n            interfaces: [],\n            fields: {}\n          });\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:\n        if (state.name) {\n          interfaceDef = null;\n          objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLObjectType */ .h6({\n            name: state.name,\n            interfaces: [],\n            fields: {}\n          });\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS: {\n        if (!state.prevState) {\n          argDefs = null;\n        } else {\n          switch (state.prevState.kind) {\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n              argDefs = fieldDef && fieldDef.args;\n              break;\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:\n              argDefs = directiveDef && directiveDef.args;\n              break;\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {\n              const name = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.name;\n              if (!name) {\n                argDefs = null;\n                break;\n              }\n              const field = parentType ? getFieldDef(schema, parentType, name) : null;\n              if (!field) {\n                argDefs = null;\n                break;\n              }\n              argDefs = field.args;\n              break;\n            }\n            default:\n              argDefs = null;\n              break;\n          }\n        }\n        break;\n      }\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT:\n        if (argDefs) {\n          for (let i = 0; i < argDefs.length; i++) {\n            if (argDefs[i].name === state.name) {\n              argDef = argDefs[i];\n              break;\n            }\n          }\n        }\n        inputType = argDef === null || argDef === void 0 ? void 0 : argDef.type;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:\n        const enumType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(inputType);\n        enumValue = enumType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLEnumType */ .mR ? enumType.getValues().find((val) => val.value === state.name) : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE:\n        const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNullableType */ .tf)(inputType);\n        inputType = nullableType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLList */ .p2 ? nullableType.ofType : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE:\n        const objectType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__/* .getNamedType */ .xC)(inputType);\n        objectFieldDefs = objectType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__/* .GraphQLInputObjectType */ .sR ? objectType.getFields() : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD:\n        const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n        inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE:\n        if (state.name) {\n          type = schema.getType(state.name);\n        }\n        break;\n    }\n  });\n  return {\n    argDef,\n    argDefs,\n    directiveDef,\n    enumValue,\n    fieldDef,\n    inputType,\n    objectFieldDefs,\n    parentType,\n    type,\n    interfaceDef,\n    objectTypeDef\n  };\n}\n__name(getTypeInfo, "getTypeInfo");\n_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("hint", "graphql", (editor, options) => {\n  const schema = options.schema;\n  if (!schema) {\n    return;\n  }\n  const cur = editor.getCursor();\n  const token = editor.getTokenAt(cur);\n  const tokenStart = token.type !== null && /"|\\w/.test(token.string[0]) ? token.start : token.end;\n  const position = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.P(cur.line, tokenStart);\n  const rawResults = getAutocompleteSuggestions(schema, editor.getValue(), position, token, options.externalFragments);\n  const results = {\n    list: rawResults.map((item) => ({\n      text: item.label,\n      type: item.type,\n      description: item.documentation,\n      isDeprecated: item.isDeprecated,\n      deprecationReason: item.deprecationReason\n    })),\n    from: { line: cur.line, ch: tokenStart },\n    to: { line: cur.line, ch: token.end }\n  };\n  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n    results.from = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.from.line, results.from.ch);\n    results.to = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.to.line, results.to.ch);\n    _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.signal(editor, "hasCompletion", editor, results, token);\n  }\n  return results;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///71441\n')},98007:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "o": () => (/* binding */ onlineParser)\n/* harmony export */ });\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59361);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97359);\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\n\n\nfunction onlineParser(options = {\n  eatWhitespace: (stream) => stream.eatWhile(_index_es_js__WEBPACK_IMPORTED_MODULE_0__.i),\n  lexRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.L,\n  parseRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.P,\n  editorConfig: {}\n}) {\n  return {\n    startState() {\n      const initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeparator: false,\n        prevState: null\n      };\n      pushRule(options.parseRules, initialState, graphql__WEBPACK_IMPORTED_MODULE_1__/* .Kind.DOCUMENT */ .h.DOCUMENT);\n      return initialState;\n    },\n    token(stream, state) {\n      return getToken(stream, state, options);\n    }\n  };\n}\n__name(onlineParser, "onlineParser");\nfunction getToken(stream, state, options) {\n  var _a;\n  if (state.inBlockstring) {\n    if (stream.match(/.*"""/)) {\n      state.inBlockstring = false;\n      return "string";\n    } else {\n      stream.skipToEnd();\n      return "string";\n    }\n  }\n  const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n  if (stream.sol()) {\n    const tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n  if (eatWhitespace(stream)) {\n    return "ws";\n  }\n  const token = lex(lexRules, stream);\n  if (!token) {\n    const matchedSomething = stream.match(/\\S+/);\n    if (!matchedSomething) {\n      stream.match(/\\s/);\n    }\n    pushRule(SpecialParseRules, state, "Invalid");\n    return "invalidchar";\n  }\n  if (token.kind === "Comment") {\n    pushRule(SpecialParseRules, state, "Comment");\n    return "comment";\n  }\n  const backupState = assign({}, state);\n  if (token.kind === "Punctuation") {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== void 0) {\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      const levels = state.levels = (state.levels || []).slice(0, -1);\n      if (state.indentLevel) {\n        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n  while (state.rule) {\n    let expected = typeof state.rule === "function" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];\n    if (state.needsSeparator) {\n      expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n    }\n    if (expected) {\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n      if (typeof expected === "string") {\n        pushRule(parseRules, state, expected);\n        continue;\n      }\n      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n        if (token.kind === "Punctuation") {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n        return expected.style;\n      }\n    }\n    unsuccessful(state);\n  }\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, "Invalid");\n  return "invalidchar";\n}\n__name(getToken, "getToken");\nfunction assign(to, from) {\n  const keys = Object.keys(from);\n  for (let i = 0; i < keys.length; i++) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n__name(assign, "assign");\nconst SpecialParseRules = {\n  Invalid: [],\n  Comment: []\n};\nfunction pushRule(rules, state, ruleKind) {\n  if (!rules[ruleKind]) {\n    throw new TypeError("Unknown rule: " + ruleKind);\n  }\n  state.prevState = Object.assign({}, state);\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeparator = false;\n}\n__name(pushRule, "pushRule");\nfunction popRule(state) {\n  if (!state.prevState) {\n    return;\n  }\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeparator = state.prevState.needsSeparator;\n  state.prevState = state.prevState.prevState;\n}\n__name(popRule, "popRule");\nfunction advanceRule(state, successful) {\n  var _a;\n  if (isList(state) && state.rule) {\n    const step = state.rule[state.step];\n    if (step.separator) {\n      const separator = step.separator;\n      state.needsSeparator = !state.needsSeparator;\n      if (!state.needsSeparator && separator.ofRule) {\n        return;\n      }\n    }\n    if (successful) {\n      return;\n    }\n  }\n  state.needsSeparator = false;\n  state.step++;\n  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n    popRule(state);\n    if (state.rule) {\n      if (isList(state)) {\n        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n          state.needsSeparator = !state.needsSeparator;\n        }\n      } else {\n        state.needsSeparator = false;\n        state.step++;\n      }\n    }\n  }\n}\n__name(advanceRule, "advanceRule");\nfunction isList(state) {\n  const step = Array.isArray(state.rule) && typeof state.rule[state.step] !== "string" && state.rule[state.step];\n  return step && step.isList;\n}\n__name(isList, "isList");\nfunction unsuccessful(state) {\n  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n    popRule(state);\n  }\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n__name(unsuccessful, "unsuccessful");\nfunction lex(lexRules, stream) {\n  const kinds = Object.keys(lexRules);\n  for (let i = 0; i < kinds.length; i++) {\n    const match = stream.match(lexRules[kinds[i]]);\n    if (match && match instanceof Array) {\n      return { kind: kinds[i], value: match[0] };\n    }\n  }\n}\n__name(lex, "lex");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98007\n')}}]);