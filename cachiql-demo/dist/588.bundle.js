"use strict";(self.webpackChunkcachiql_demo=self.webpackChunkcachiql_demo||[]).push([[588],{27588:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97480);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(90398);\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59361);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67294);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(73935);\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\n\n\n\n\n\nfunction jsonParse(str) {\n  string = str;\n  strLen = str.length;\n  start = end = lastEnd = -1;\n  ch();\n  lex();\n  const ast = parseObj();\n  expect("EOF");\n  return ast;\n}\n__name(jsonParse, "jsonParse");\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n  const nodeStart = start;\n  const members = [];\n  expect("{");\n  if (!skip("}")) {\n    do {\n      members.push(parseMember());\n    } while (skip(","));\n    expect("}");\n  }\n  return {\n    kind: "Object",\n    start: nodeStart,\n    end: lastEnd,\n    members\n  };\n}\n__name(parseObj, "parseObj");\nfunction parseMember() {\n  const nodeStart = start;\n  const key = kind === "String" ? curToken() : null;\n  expect("String");\n  expect(":");\n  const value = parseVal();\n  return {\n    kind: "Member",\n    start: nodeStart,\n    end: lastEnd,\n    key,\n    value\n  };\n}\n__name(parseMember, "parseMember");\nfunction parseArr() {\n  const nodeStart = start;\n  const values = [];\n  expect("[");\n  if (!skip("]")) {\n    do {\n      values.push(parseVal());\n    } while (skip(","));\n    expect("]");\n  }\n  return {\n    kind: "Array",\n    start: nodeStart,\n    end: lastEnd,\n    values\n  };\n}\n__name(parseArr, "parseArr");\nfunction parseVal() {\n  switch (kind) {\n    case "[":\n      return parseArr();\n    case "{":\n      return parseObj();\n    case "String":\n    case "Number":\n    case "Boolean":\n    case "Null":\n      const token = curToken();\n      lex();\n      return token;\n  }\n  expect("Value");\n}\n__name(parseVal, "parseVal");\nfunction curToken() {\n  return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\n__name(curToken, "curToken");\nfunction expect(str) {\n  if (kind === str) {\n    lex();\n    return;\n  }\n  let found;\n  if (kind === "EOF") {\n    found = "[end of file]";\n  } else if (end - start > 1) {\n    found = "`" + string.slice(start, end) + "`";\n  } else {\n    const match = string.slice(start).match(/^.+?\\b/);\n    found = "`" + (match ? match[0] : string[start]) + "`";\n  }\n  throw syntaxError(`Expected ${str} but found ${found}.`);\n}\n__name(expect, "expect");\nclass JSONSyntaxError extends Error {\n  constructor(message, position) {\n    super(message);\n    this.position = position;\n  }\n}\n__name(JSONSyntaxError, "JSONSyntaxError");\nfunction syntaxError(message) {\n  return new JSONSyntaxError(message, { start, end });\n}\n__name(syntaxError, "syntaxError");\nfunction skip(k) {\n  if (kind === k) {\n    lex();\n    return true;\n  }\n}\n__name(skip, "skip");\nfunction ch() {\n  if (end < strLen) {\n    end++;\n    code = end === strLen ? 0 : string.charCodeAt(end);\n  }\n  return code;\n}\n__name(ch, "ch");\nfunction lex() {\n  lastEnd = end;\n  while (code === 9 || code === 10 || code === 13 || code === 32) {\n    ch();\n  }\n  if (code === 0) {\n    kind = "EOF";\n    return;\n  }\n  start = end;\n  switch (code) {\n    case 34:\n      kind = "String";\n      return readString();\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      kind = "Number";\n      return readNumber();\n    case 102:\n      if (string.slice(start, start + 5) !== "false") {\n        break;\n      }\n      end += 4;\n      ch();\n      kind = "Boolean";\n      return;\n    case 110:\n      if (string.slice(start, start + 4) !== "null") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = "Null";\n      return;\n    case 116:\n      if (string.slice(start, start + 4) !== "true") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = "Boolean";\n      return;\n  }\n  kind = string[start];\n  ch();\n}\n__name(lex, "lex");\nfunction readString() {\n  ch();\n  while (code !== 34 && code > 31) {\n    if (code === 92) {\n      code = ch();\n      switch (code) {\n        case 34:\n        case 47:\n        case 92:\n        case 98:\n        case 102:\n        case 110:\n        case 114:\n        case 116:\n          ch();\n          break;\n        case 117:\n          ch();\n          readHex();\n          readHex();\n          readHex();\n          readHex();\n          break;\n        default:\n          throw syntaxError("Bad character escape sequence.");\n      }\n    } else if (end === strLen) {\n      throw syntaxError("Unterminated string.");\n    } else {\n      ch();\n    }\n  }\n  if (code === 34) {\n    ch();\n    return;\n  }\n  throw syntaxError("Unterminated string.");\n}\n__name(readString, "readString");\nfunction readHex() {\n  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {\n    return ch();\n  }\n  throw syntaxError("Expected hexadecimal digit.");\n}\n__name(readHex, "readHex");\nfunction readNumber() {\n  if (code === 45) {\n    ch();\n  }\n  if (code === 48) {\n    ch();\n  } else {\n    readDigits();\n  }\n  if (code === 46) {\n    ch();\n    readDigits();\n  }\n  if (code === 69 || code === 101) {\n    code = ch();\n    if (code === 43 || code === 45) {\n      ch();\n    }\n    readDigits();\n  }\n}\n__name(readNumber, "readNumber");\nfunction readDigits() {\n  if (code < 48 || code > 57) {\n    throw syntaxError("Expected decimal digit.");\n  }\n  do {\n    ch();\n  } while (code >= 48 && code <= 57);\n}\n__name(readDigits, "readDigits");\n_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("lint", "graphql-variables", (text, options, editor) => {\n  if (!text) {\n    return [];\n  }\n  let ast;\n  try {\n    ast = jsonParse(text);\n  } catch (error) {\n    if (error instanceof JSONSyntaxError) {\n      return [lintError(editor, error.position, error.message)];\n    }\n    throw error;\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return [];\n  }\n  return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n  const errors = [];\n  variablesAST.members.forEach((member) => {\n    var _a;\n    if (member) {\n      const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n      const type = variableToType[variableName];\n      if (!type) {\n        errors.push(lintError(editor, member.key, `Variable "$${variableName}" does not appear in any GraphQL query.`));\n      } else {\n        validateValue(type, member.value).forEach(([node, message]) => {\n          errors.push(lintError(editor, node, message));\n        });\n      }\n    }\n  });\n  return errors;\n}\n__name(validateVariables, "validateVariables");\nfunction validateValue(type, valueAST) {\n  if (!type || !valueAST) {\n    return [];\n  }\n  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLNonNull */ .bM) {\n    if (valueAST.kind === "Null") {\n      return [[valueAST, `Type "${type}" is non-nullable and cannot be null.`]];\n    }\n    return validateValue(type.ofType, valueAST);\n  }\n  if (valueAST.kind === "Null") {\n    return [];\n  }\n  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLList */ .p2) {\n    const itemType = type.ofType;\n    if (valueAST.kind === "Array") {\n      const values = valueAST.values || [];\n      return mapCat(values, (item) => validateValue(itemType, item));\n    }\n    return validateValue(itemType, valueAST);\n  }\n  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLInputObjectType */ .sR) {\n    if (valueAST.kind !== "Object") {\n      return [[valueAST, `Type "${type}" must be an Object.`]];\n    }\n    const providedFields = /* @__PURE__ */ Object.create(null);\n    const fieldErrors = mapCat(valueAST.members, (member) => {\n      var _a;\n      const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n      providedFields[fieldName] = true;\n      const inputField = type.getFields()[fieldName];\n      if (!inputField) {\n        return [\n          [\n            member.key,\n            `Type "${type}" does not have a field "${fieldName}".`\n          ]\n        ];\n      }\n      const fieldType = inputField ? inputField.type : void 0;\n      return validateValue(fieldType, member.value);\n    });\n    Object.keys(type.getFields()).forEach((fieldName) => {\n      if (!providedFields[fieldName]) {\n        const fieldType = type.getFields()[fieldName].type;\n        if (fieldType instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLNonNull */ .bM) {\n          fieldErrors.push([\n            valueAST,\n            `Object of type "${type}" is missing required field "${fieldName}".`\n          ]);\n        }\n      }\n    });\n    return fieldErrors;\n  }\n  if (type.name === "Boolean" && valueAST.kind !== "Boolean" || type.name === "String" && valueAST.kind !== "String" || type.name === "ID" && valueAST.kind !== "Number" && valueAST.kind !== "String" || type.name === "Float" && valueAST.kind !== "Number" || type.name === "Int" && (valueAST.kind !== "Number" || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, `Expected value of type "${type}".`]];\n  }\n  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLEnumType */ .mR || type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__/* .GraphQLScalarType */ .n2) {\n    if (valueAST.kind !== "String" && valueAST.kind !== "Number" && valueAST.kind !== "Boolean" && valueAST.kind !== "Null" || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, `Expected value of type "${type}".`]];\n    }\n  }\n  return [];\n}\n__name(validateValue, "validateValue");\nfunction lintError(editor, node, message) {\n  return {\n    message,\n    severity: "error",\n    type: "validation",\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\n__name(lintError, "lintError");\nfunction isNullish(value) {\n  return value === null || value === void 0 || value !== value;\n}\n__name(isNullish, "isNullish");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, "mapCat");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27588\n')}}]);