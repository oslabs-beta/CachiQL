"use strict";(self.webpackChunkcachiql_demo=self.webpackChunkcachiql_demo||[]).push([[662],{50045:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "C": () => (/* binding */ CharacterStream),\n/* harmony export */   "P": () => (/* binding */ Position),\n/* harmony export */   "R": () => (/* binding */ Range)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nclass CharacterStream {\n  constructor(sourceText) {\n    this.getStartOfToken = () => this._start;\n    this.getCurrentPosition = () => this._pos;\n    this.eol = () => this._sourceText.length === this._pos;\n    this.sol = () => this._pos === 0;\n    this.peek = () => {\n      return this._sourceText.charAt(this._pos) ? this._sourceText.charAt(this._pos) : null;\n    };\n    this.next = () => {\n      const char = this._sourceText.charAt(this._pos);\n      this._pos++;\n      return char;\n    };\n    this.eat = (pattern) => {\n      const isMatched = this._testNextCharacter(pattern);\n      if (isMatched) {\n        this._start = this._pos;\n        this._pos++;\n        return this._sourceText.charAt(this._pos - 1);\n      }\n      return void 0;\n    };\n    this.eatWhile = (match) => {\n      let isMatched = this._testNextCharacter(match);\n      let didEat = false;\n      if (isMatched) {\n        didEat = isMatched;\n        this._start = this._pos;\n      }\n      while (isMatched) {\n        this._pos++;\n        isMatched = this._testNextCharacter(match);\n        didEat = true;\n      }\n      return didEat;\n    };\n    this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n    this.skipToEnd = () => {\n      this._pos = this._sourceText.length;\n    };\n    this.skipTo = (position) => {\n      this._pos = position;\n    };\n    this.match = (pattern, consume = true, caseFold = false) => {\n      let token = null;\n      let match = null;\n      if (typeof pattern === "string") {\n        const regex = new RegExp(pattern, caseFold ? "i" : "g");\n        match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n        token = pattern;\n      } else if (pattern instanceof RegExp) {\n        match = this._sourceText.slice(this._pos).match(pattern);\n        token = match === null || match === void 0 ? void 0 : match[0];\n      }\n      if (match != null) {\n        if (typeof pattern === "string" || match instanceof Array && this._sourceText.startsWith(match[0], this._pos)) {\n          if (consume) {\n            this._start = this._pos;\n            if (token && token.length) {\n              this._pos += token.length;\n            }\n          }\n          return match;\n        }\n      }\n      return false;\n    };\n    this.backUp = (num) => {\n      this._pos -= num;\n    };\n    this.column = () => this._pos;\n    this.indentation = () => {\n      const match = this._sourceText.match(/\\s*/);\n      let indent = 0;\n      if (match && match.length !== 0) {\n        const whiteSpaces = match[0];\n        let pos = 0;\n        while (whiteSpaces.length > pos) {\n          if (whiteSpaces.charCodeAt(pos) === 9) {\n            indent += 2;\n          } else {\n            indent++;\n          }\n          pos++;\n        }\n      }\n      return indent;\n    };\n    this.current = () => this._sourceText.slice(this._start, this._pos);\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n  _testNextCharacter(pattern) {\n    const character = this._sourceText.charAt(this._pos);\n    let isMatched = false;\n    if (typeof pattern === "string") {\n      isMatched = character === pattern;\n    } else {\n      isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);\n    }\n    return isMatched;\n  }\n}\n__name(CharacterStream, "CharacterStream");\nclass Range {\n  constructor(start, end) {\n    this.containsPosition = (position) => {\n      if (this.start.line === position.line) {\n        return this.start.character <= position.character;\n      } else if (this.end.line === position.line) {\n        return this.end.character >= position.character;\n      } else {\n        return this.start.line <= position.line && this.end.line >= position.line;\n      }\n    };\n    this.start = start;\n    this.end = end;\n  }\n  setStart(line, character) {\n    this.start = new Position(line, character);\n  }\n  setEnd(line, character) {\n    this.end = new Position(line, character);\n  }\n}\n__name(Range, "Range");\nclass Position {\n  constructor(line, character) {\n    this.lessThanOrEqualTo = (position) => this.line < position.line || this.line === position.line && this.character <= position.character;\n    this.line = line;\n    this.character = character;\n  }\n  setLine(line) {\n    this.line = line;\n  }\n  setCharacter(character) {\n    this.character = character;\n  }\n}\n__name(Position, "Position");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAwNDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLDREQUE0RCwyQkFBMkI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FjaGlxbC1kZW1vLy4vbm9kZV9tb2R1bGVzL0BncmFwaGlxbC9yZWFjdC9kaXN0L1JhbmdlLmVzLmpzPzA4MTMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX25hbWUgPSAodGFyZ2V0LCB2YWx1ZSkgPT4gX19kZWZQcm9wKHRhcmdldCwgXCJuYW1lXCIsIHsgdmFsdWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbmNsYXNzIENoYXJhY3RlclN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKHNvdXJjZVRleHQpIHtcbiAgICB0aGlzLmdldFN0YXJ0T2ZUb2tlbiA9ICgpID0+IHRoaXMuX3N0YXJ0O1xuICAgIHRoaXMuZ2V0Q3VycmVudFBvc2l0aW9uID0gKCkgPT4gdGhpcy5fcG9zO1xuICAgIHRoaXMuZW9sID0gKCkgPT4gdGhpcy5fc291cmNlVGV4dC5sZW5ndGggPT09IHRoaXMuX3BvcztcbiAgICB0aGlzLnNvbCA9ICgpID0+IHRoaXMuX3BvcyA9PT0gMDtcbiAgICB0aGlzLnBlZWsgPSAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fc291cmNlVGV4dC5jaGFyQXQodGhpcy5fcG9zKSA/IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3BvcykgOiBudWxsO1xuICAgIH07XG4gICAgdGhpcy5uZXh0ID0gKCkgPT4ge1xuICAgICAgY29uc3QgY2hhciA9IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3Bvcyk7XG4gICAgICB0aGlzLl9wb3MrKztcbiAgICAgIHJldHVybiBjaGFyO1xuICAgIH07XG4gICAgdGhpcy5lYXQgPSAocGF0dGVybikgPT4ge1xuICAgICAgY29uc3QgaXNNYXRjaGVkID0gdGhpcy5fdGVzdE5leHRDaGFyYWN0ZXIocGF0dGVybik7XG4gICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgIHRoaXMuX3N0YXJ0ID0gdGhpcy5fcG9zO1xuICAgICAgICB0aGlzLl9wb3MrKztcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3BvcyAtIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9O1xuICAgIHRoaXMuZWF0V2hpbGUgPSAobWF0Y2gpID0+IHtcbiAgICAgIGxldCBpc01hdGNoZWQgPSB0aGlzLl90ZXN0TmV4dENoYXJhY3RlcihtYXRjaCk7XG4gICAgICBsZXQgZGlkRWF0ID0gZmFsc2U7XG4gICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgIGRpZEVhdCA9IGlzTWF0Y2hlZDtcbiAgICAgICAgdGhpcy5fc3RhcnQgPSB0aGlzLl9wb3M7XG4gICAgICB9XG4gICAgICB3aGlsZSAoaXNNYXRjaGVkKSB7XG4gICAgICAgIHRoaXMuX3BvcysrO1xuICAgICAgICBpc01hdGNoZWQgPSB0aGlzLl90ZXN0TmV4dENoYXJhY3RlcihtYXRjaCk7XG4gICAgICAgIGRpZEVhdCA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGlkRWF0O1xuICAgIH07XG4gICAgdGhpcy5lYXRTcGFjZSA9ICgpID0+IHRoaXMuZWF0V2hpbGUoL1tcXHNcXHUwMGEwXS8pO1xuICAgIHRoaXMuc2tpcFRvRW5kID0gKCkgPT4ge1xuICAgICAgdGhpcy5fcG9zID0gdGhpcy5fc291cmNlVGV4dC5sZW5ndGg7XG4gICAgfTtcbiAgICB0aGlzLnNraXBUbyA9IChwb3NpdGlvbikgPT4ge1xuICAgICAgdGhpcy5fcG9zID0gcG9zaXRpb247XG4gICAgfTtcbiAgICB0aGlzLm1hdGNoID0gKHBhdHRlcm4sIGNvbnN1bWUgPSB0cnVlLCBjYXNlRm9sZCA9IGZhbHNlKSA9PiB7XG4gICAgICBsZXQgdG9rZW4gPSBudWxsO1xuICAgICAgbGV0IG1hdGNoID0gbnVsbDtcbiAgICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAocGF0dGVybiwgY2FzZUZvbGQgPyBcImlcIiA6IFwiZ1wiKTtcbiAgICAgICAgbWF0Y2ggPSByZWdleC50ZXN0KHRoaXMuX3NvdXJjZVRleHQuc3Vic3RyKHRoaXMuX3BvcywgcGF0dGVybi5sZW5ndGgpKTtcbiAgICAgICAgdG9rZW4gPSBwYXR0ZXJuO1xuICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIG1hdGNoID0gdGhpcy5fc291cmNlVGV4dC5zbGljZSh0aGlzLl9wb3MpLm1hdGNoKHBhdHRlcm4pO1xuICAgICAgICB0b2tlbiA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaFswXTtcbiAgICAgIH1cbiAgICAgIGlmIChtYXRjaCAhPSBudWxsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIiB8fCBtYXRjaCBpbnN0YW5jZW9mIEFycmF5ICYmIHRoaXMuX3NvdXJjZVRleHQuc3RhcnRzV2l0aChtYXRjaFswXSwgdGhpcy5fcG9zKSkge1xuICAgICAgICAgIGlmIChjb25zdW1lKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGFydCA9IHRoaXMuX3BvcztcbiAgICAgICAgICAgIGlmICh0b2tlbiAmJiB0b2tlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgdGhpcy5fcG9zICs9IHRva2VuLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICB0aGlzLmJhY2tVcCA9IChudW0pID0+IHtcbiAgICAgIHRoaXMuX3BvcyAtPSBudW07XG4gICAgfTtcbiAgICB0aGlzLmNvbHVtbiA9ICgpID0+IHRoaXMuX3BvcztcbiAgICB0aGlzLmluZGVudGF0aW9uID0gKCkgPT4ge1xuICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLl9zb3VyY2VUZXh0Lm1hdGNoKC9cXHMqLyk7XG4gICAgICBsZXQgaW5kZW50ID0gMDtcbiAgICAgIGlmIChtYXRjaCAmJiBtYXRjaC5sZW5ndGggIT09IDApIHtcbiAgICAgICAgY29uc3Qgd2hpdGVTcGFjZXMgPSBtYXRjaFswXTtcbiAgICAgICAgbGV0IHBvcyA9IDA7XG4gICAgICAgIHdoaWxlICh3aGl0ZVNwYWNlcy5sZW5ndGggPiBwb3MpIHtcbiAgICAgICAgICBpZiAod2hpdGVTcGFjZXMuY2hhckNvZGVBdChwb3MpID09PSA5KSB7XG4gICAgICAgICAgICBpbmRlbnQgKz0gMjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5kZW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvcysrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaW5kZW50O1xuICAgIH07XG4gICAgdGhpcy5jdXJyZW50ID0gKCkgPT4gdGhpcy5fc291cmNlVGV4dC5zbGljZSh0aGlzLl9zdGFydCwgdGhpcy5fcG9zKTtcbiAgICB0aGlzLl9zdGFydCA9IDA7XG4gICAgdGhpcy5fcG9zID0gMDtcbiAgICB0aGlzLl9zb3VyY2VUZXh0ID0gc291cmNlVGV4dDtcbiAgfVxuICBfdGVzdE5leHRDaGFyYWN0ZXIocGF0dGVybikge1xuICAgIGNvbnN0IGNoYXJhY3RlciA9IHRoaXMuX3NvdXJjZVRleHQuY2hhckF0KHRoaXMuX3Bvcyk7XG4gICAgbGV0IGlzTWF0Y2hlZCA9IGZhbHNlO1xuICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgaXNNYXRjaGVkID0gY2hhcmFjdGVyID09PSBwYXR0ZXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBpc01hdGNoZWQgPSBwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwID8gcGF0dGVybi50ZXN0KGNoYXJhY3RlcikgOiBwYXR0ZXJuKGNoYXJhY3Rlcik7XG4gICAgfVxuICAgIHJldHVybiBpc01hdGNoZWQ7XG4gIH1cbn1cbl9fbmFtZShDaGFyYWN0ZXJTdHJlYW0sIFwiQ2hhcmFjdGVyU3RyZWFtXCIpO1xuY2xhc3MgUmFuZ2Uge1xuICBjb25zdHJ1Y3RvcihzdGFydCwgZW5kKSB7XG4gICAgdGhpcy5jb250YWluc1Bvc2l0aW9uID0gKHBvc2l0aW9uKSA9PiB7XG4gICAgICBpZiAodGhpcy5zdGFydC5saW5lID09PSBwb3NpdGlvbi5saW5lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXJ0LmNoYXJhY3RlciA8PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZW5kLmxpbmUgPT09IHBvc2l0aW9uLmxpbmUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5kLmNoYXJhY3RlciA+PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGFydC5saW5lIDw9IHBvc2l0aW9uLmxpbmUgJiYgdGhpcy5lbmQubGluZSA+PSBwb3NpdGlvbi5saW5lO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5zdGFydCA9IHN0YXJ0O1xuICAgIHRoaXMuZW5kID0gZW5kO1xuICB9XG4gIHNldFN0YXJ0KGxpbmUsIGNoYXJhY3Rlcikge1xuICAgIHRoaXMuc3RhcnQgPSBuZXcgUG9zaXRpb24obGluZSwgY2hhcmFjdGVyKTtcbiAgfVxuICBzZXRFbmQobGluZSwgY2hhcmFjdGVyKSB7XG4gICAgdGhpcy5lbmQgPSBuZXcgUG9zaXRpb24obGluZSwgY2hhcmFjdGVyKTtcbiAgfVxufVxuX19uYW1lKFJhbmdlLCBcIlJhbmdlXCIpO1xuY2xhc3MgUG9zaXRpb24ge1xuICBjb25zdHJ1Y3RvcihsaW5lLCBjaGFyYWN0ZXIpIHtcbiAgICB0aGlzLmxlc3NUaGFuT3JFcXVhbFRvID0gKHBvc2l0aW9uKSA9PiB0aGlzLmxpbmUgPCBwb3NpdGlvbi5saW5lIHx8IHRoaXMubGluZSA9PT0gcG9zaXRpb24ubGluZSAmJiB0aGlzLmNoYXJhY3RlciA8PSBwb3NpdGlvbi5jaGFyYWN0ZXI7XG4gICAgdGhpcy5saW5lID0gbGluZTtcbiAgICB0aGlzLmNoYXJhY3RlciA9IGNoYXJhY3RlcjtcbiAgfVxuICBzZXRMaW5lKGxpbmUpIHtcbiAgICB0aGlzLmxpbmUgPSBsaW5lO1xuICB9XG4gIHNldENoYXJhY3RlcihjaGFyYWN0ZXIpIHtcbiAgICB0aGlzLmNoYXJhY3RlciA9IGNoYXJhY3RlcjtcbiAgfVxufVxuX19uYW1lKFBvc2l0aW9uLCBcIlBvc2l0aW9uXCIpO1xuZXhwb3J0IHsgQ2hhcmFjdGVyU3RyZWFtIGFzIEMsIFBvc2l0aW9uIGFzIFAsIFJhbmdlIGFzIFIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50045\n')},67662:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97480);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(52877);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(77990);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69538);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(93201);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(22618);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(53274);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(25580);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(84873);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(96300);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(34800);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(42266);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(92767);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(24196);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(81294);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(88081);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(5311);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(24635);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(97359);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(39011);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(84275);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(28087);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(15394);\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59361);\n/* harmony import */ var _Range_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50045);\n/* harmony import */ var _onlineParser_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(98007);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67294);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(73935);\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\n\n\n\n\n\n\n\nconst specifiedSDLRules = [\n  graphql__WEBPACK_IMPORTED_MODULE_6__/* .LoneSchemaDefinitionRule */ .t,\n  graphql__WEBPACK_IMPORTED_MODULE_7__/* .UniqueOperationTypesRule */ .q,\n  graphql__WEBPACK_IMPORTED_MODULE_8__/* .UniqueTypeNamesRule */ .P,\n  graphql__WEBPACK_IMPORTED_MODULE_9__/* .UniqueEnumValueNamesRule */ .L,\n  graphql__WEBPACK_IMPORTED_MODULE_10__/* .UniqueFieldDefinitionNamesRule */ .y,\n  graphql__WEBPACK_IMPORTED_MODULE_11__/* .UniqueDirectiveNamesRule */ .o,\n  graphql__WEBPACK_IMPORTED_MODULE_12__/* .KnownTypeNamesRule */ .I,\n  graphql__WEBPACK_IMPORTED_MODULE_13__/* .KnownDirectivesRule */ .J,\n  graphql__WEBPACK_IMPORTED_MODULE_14__/* .UniqueDirectivesPerLocationRule */ .k,\n  graphql__WEBPACK_IMPORTED_MODULE_15__/* .PossibleTypeExtensionsRule */ .g,\n  graphql__WEBPACK_IMPORTED_MODULE_16__/* .UniqueArgumentNamesRule */ .L,\n  graphql__WEBPACK_IMPORTED_MODULE_17__/* .UniqueInputFieldNamesRule */ .P\n];\nfunction validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n  const rules = graphql__WEBPACK_IMPORTED_MODULE_18__/* .specifiedRules.filter */ .i.filter((rule) => {\n    if (rule === graphql__WEBPACK_IMPORTED_MODULE_19__/* .NoUnusedFragmentsRule */ .J || rule === graphql__WEBPACK_IMPORTED_MODULE_20__/* .ExecutableDefinitionsRule */ .i) {\n      return false;\n    }\n    if (isRelayCompatMode && rule === graphql__WEBPACK_IMPORTED_MODULE_21__/* .KnownFragmentNamesRule */ .a) {\n      return false;\n    }\n    return true;\n  });\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n  const errors = (0,graphql__WEBPACK_IMPORTED_MODULE_22__/* .validate */ .Gu)(schema, ast, rules);\n  return errors.filter((error) => {\n    if (error.message.indexOf("Unknown directive") !== -1 && error.nodes) {\n      const node = error.nodes[0];\n      if (node && node.kind === graphql__WEBPACK_IMPORTED_MODULE_23__/* .Kind.DIRECTIVE */ .h.DIRECTIVE) {\n        const name = node.name.value;\n        if (name === "arguments" || name === "argumentDefinitions") {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n}\n__name(validateWithCustomRules, "validateWithCustomRules");\nconst SEVERITY$1 = {\n  Error: "Error",\n  Warning: "Warning",\n  Information: "Information",\n  Hint: "Hint"\n};\nconst DIAGNOSTIC_SEVERITY = {\n  [SEVERITY$1.Error]: 1,\n  [SEVERITY$1.Warning]: 2,\n  [SEVERITY$1.Information]: 3,\n  [SEVERITY$1.Hint]: 4\n};\nconst invariant = /* @__PURE__ */ __name((condition, message) => {\n  if (!condition) {\n    throw new Error(message);\n  }\n}, "invariant");\nfunction getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {\n  var _a, _b;\n  let ast = null;\n  if (externalFragments) {\n    if (typeof externalFragments === "string") {\n      query += "\\n\\n" + externalFragments;\n    } else {\n      query += "\\n\\n" + externalFragments.reduce((agg, node) => {\n        agg += (0,graphql__WEBPACK_IMPORTED_MODULE_24__/* .print */ .S)(node) + "\\n\\n";\n        return agg;\n      }, "");\n    }\n  }\n  try {\n    ast = (0,graphql__WEBPACK_IMPORTED_MODULE_25__/* .parse */ .Qc)(query);\n  } catch (error) {\n    if (error instanceof graphql__WEBPACK_IMPORTED_MODULE_26__/* .GraphQLError */ ._) {\n      const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, query);\n      return [\n        {\n          severity: DIAGNOSTIC_SEVERITY.Error,\n          message: error.message,\n          source: "GraphQL: Syntax",\n          range\n        }\n      ];\n    }\n    throw error;\n  }\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n__name(getDiagnostics, "getDiagnostics");\nfunction validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n  if (!schema) {\n    return [];\n  }\n  const validationErrorAnnotations = mapCat(validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Error, "Validation"));\n  const deprecationWarningAnnotations = mapCat((0,graphql__WEBPACK_IMPORTED_MODULE_22__/* .validate */ .Gu)(schema, ast, [graphql__WEBPACK_IMPORTED_MODULE_27__/* .NoDeprecatedCustomRule */ .r]), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Warning, "Deprecation"));\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n__name(validateQuery, "validateQuery");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, "mapCat");\nfunction annotations(error, severity, type) {\n  if (!error.nodes) {\n    return [];\n  }\n  const highlightedNodes = [];\n  error.nodes.forEach((node) => {\n    const highlightNode = node.kind !== "Variable" && "name" in node && node.name !== void 0 ? node.name : "variable" in node && node.variable !== void 0 ? node.variable : node;\n    if (highlightNode) {\n      invariant(error.locations, "GraphQL validation error requires locations.");\n      const loc = error.locations[0];\n      const highlightLoc = getLocation(highlightNode);\n      const end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: `GraphQL: ${type}`,\n        message: error.message,\n        severity,\n        range: new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.R(new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(loc.line - 1, loc.column - 1), new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(loc.line - 1, end))\n      });\n    }\n  });\n  return highlightedNodes;\n}\n__name(annotations, "annotations");\nfunction getRange(location, queryText) {\n  const parser = (0,_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_3__.o)();\n  const state = parser.startState();\n  const lines = queryText.split("\\n");\n  invariant(lines.length >= location.line, "Query text must have more lines than where the error happened");\n  let stream = null;\n  for (let i = 0; i < location.line; i++) {\n    stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.C(lines[i]);\n    while (!stream.eol()) {\n      const style = parser.token(stream, state);\n      if (style === "invalidchar") {\n        break;\n      }\n    }\n  }\n  invariant(stream, "Expected Parser stream to be available.");\n  const line = location.line - 1;\n  const start = stream.getStartOfToken();\n  const end = stream.getCurrentPosition();\n  return new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.R(new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(line, start), new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(line, end));\n}\n__name(getRange, "getRange");\nfunction getLocation(node) {\n  const typeCastedNode = node;\n  const location = typeCastedNode.loc;\n  invariant(location, "Expected ASTNode to have a location.");\n  return location;\n}\n__name(getLocation, "getLocation");\nconst SEVERITY = ["error", "warning", "information", "hint"];\nconst TYPE = {\n  "GraphQL: Validation": "validation",\n  "GraphQL: Deprecation": "deprecation",\n  "GraphQL: Syntax": "syntax"\n};\n_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("lint", "graphql", (text, options) => {\n  const schema = options.schema;\n  const rawResults = getDiagnostics(text, schema, options.validationRules, void 0, options.externalFragments);\n  const results = rawResults.map((error) => ({\n    message: error.message,\n    severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n    type: error.source ? TYPE[error.source] : void 0,\n    from: _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(error.range.start.line, error.range.start.character),\n    to: _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(error.range.end.line, error.range.end.character)\n  }));\n  return results;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67662\n')},98007:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "o": () => (/* binding */ onlineParser)\n/* harmony export */ });\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59361);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97359);\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\n\n\nfunction onlineParser(options = {\n  eatWhitespace: (stream) => stream.eatWhile(_index_es_js__WEBPACK_IMPORTED_MODULE_0__.i),\n  lexRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.L,\n  parseRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.P,\n  editorConfig: {}\n}) {\n  return {\n    startState() {\n      const initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeparator: false,\n        prevState: null\n      };\n      pushRule(options.parseRules, initialState, graphql__WEBPACK_IMPORTED_MODULE_1__/* .Kind.DOCUMENT */ .h.DOCUMENT);\n      return initialState;\n    },\n    token(stream, state) {\n      return getToken(stream, state, options);\n    }\n  };\n}\n__name(onlineParser, "onlineParser");\nfunction getToken(stream, state, options) {\n  var _a;\n  if (state.inBlockstring) {\n    if (stream.match(/.*"""/)) {\n      state.inBlockstring = false;\n      return "string";\n    } else {\n      stream.skipToEnd();\n      return "string";\n    }\n  }\n  const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n  if (stream.sol()) {\n    const tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n  if (eatWhitespace(stream)) {\n    return "ws";\n  }\n  const token = lex(lexRules, stream);\n  if (!token) {\n    const matchedSomething = stream.match(/\\S+/);\n    if (!matchedSomething) {\n      stream.match(/\\s/);\n    }\n    pushRule(SpecialParseRules, state, "Invalid");\n    return "invalidchar";\n  }\n  if (token.kind === "Comment") {\n    pushRule(SpecialParseRules, state, "Comment");\n    return "comment";\n  }\n  const backupState = assign({}, state);\n  if (token.kind === "Punctuation") {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== void 0) {\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      const levels = state.levels = (state.levels || []).slice(0, -1);\n      if (state.indentLevel) {\n        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n  while (state.rule) {\n    let expected = typeof state.rule === "function" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];\n    if (state.needsSeparator) {\n      expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n    }\n    if (expected) {\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n      if (typeof expected === "string") {\n        pushRule(parseRules, state, expected);\n        continue;\n      }\n      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n        if (token.kind === "Punctuation") {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n        return expected.style;\n      }\n    }\n    unsuccessful(state);\n  }\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, "Invalid");\n  return "invalidchar";\n}\n__name(getToken, "getToken");\nfunction assign(to, from) {\n  const keys = Object.keys(from);\n  for (let i = 0; i < keys.length; i++) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n__name(assign, "assign");\nconst SpecialParseRules = {\n  Invalid: [],\n  Comment: []\n};\nfunction pushRule(rules, state, ruleKind) {\n  if (!rules[ruleKind]) {\n    throw new TypeError("Unknown rule: " + ruleKind);\n  }\n  state.prevState = Object.assign({}, state);\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeparator = false;\n}\n__name(pushRule, "pushRule");\nfunction popRule(state) {\n  if (!state.prevState) {\n    return;\n  }\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeparator = state.prevState.needsSeparator;\n  state.prevState = state.prevState.prevState;\n}\n__name(popRule, "popRule");\nfunction advanceRule(state, successful) {\n  var _a;\n  if (isList(state) && state.rule) {\n    const step = state.rule[state.step];\n    if (step.separator) {\n      const separator = step.separator;\n      state.needsSeparator = !state.needsSeparator;\n      if (!state.needsSeparator && separator.ofRule) {\n        return;\n      }\n    }\n    if (successful) {\n      return;\n    }\n  }\n  state.needsSeparator = false;\n  state.step++;\n  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n    popRule(state);\n    if (state.rule) {\n      if (isList(state)) {\n        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n          state.needsSeparator = !state.needsSeparator;\n        }\n      } else {\n        state.needsSeparator = false;\n        state.step++;\n      }\n    }\n  }\n}\n__name(advanceRule, "advanceRule");\nfunction isList(state) {\n  const step = Array.isArray(state.rule) && typeof state.rule[state.step] !== "string" && state.rule[state.step];\n  return step && step.isList;\n}\n__name(isList, "isList");\nfunction unsuccessful(state) {\n  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n    popRule(state);\n  }\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n__name(unsuccessful, "unsuccessful");\nfunction lex(lexRules, stream) {\n  const kinds = Object.keys(lexRules);\n  for (let i = 0; i < kinds.length; i++) {\n    const match = stream.match(lexRules[kinds[i]]);\n    if (match && match instanceof Array) {\n      return { kind: kinds[i], value: match[0] };\n    }\n  }\n}\n__name(lex, "lex");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98007\n')}}]);